{"version":3,"sources":["services/connectionService.js","services/musicService.js","contexts/SelectionContext.js","components/MusicItem.js","utils/shuffle.js","components/App.js","reportWebVitals.js","index.js"],"names":["urlParams","URLSearchParams","window","location","search","CONNECTION_HOST","get","client","io","sendMessage","msg","a","emit","musicListPromise","axios","then","response","Promise","complete","error","parse","data","dynamicTyping","skipEmptyLines","header","result","filter","row","name","map","catch","err","console","id","song","artist","danceability","energy","liveness","valence","type","SelectionContext","React","createContext","Container","styled","div","MusicItem","music","useContext","selected","setSelected","isSelected","className","classNames","onClick","selectSong","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","startAnimation","keyframes","shuffleAnimation","StyledHeader","h1","StyledContent","StyledItemContainer","App","useState","searchText","setSearchText","musicList","setMusicList","shuffleKey","setShuffleKey","useEffect","findMusicList","Provider","value","placeholder","onFocus","e","target","select","onChange","ref","text","toLowerCase","trim","genre","some","part","String","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEMA,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAEzCC,EAAe,UAAML,EAAUM,IAAI,SAAW,YAA/B,YAA8CN,EAAUM,IAAI,SAAW,KAE7FC,EAASC,YAAGH,GAEX,SAAeI,EAAtB,kC,4CAAO,WAA2BC,GAA3B,SAAAC,EAAA,sDACHJ,EAAOK,KAAK,MAAOF,GADhB,4C,kCCHDG,EAAmBC,IAAMR,IAAN,YAAeD,EAAf,yBACpBU,KADoB,+BAAAJ,EAAA,MACf,WAAMK,GAAN,eAAAL,EAAA,sEACmB,IAAIM,SAAQ,SAACC,EAAUC,GACxCC,gBAAMJ,EAASK,KAAM,CACjBC,eAAe,EACfC,gBAAgB,EAChBC,QAAQ,EACRN,WACAC,aAPN,cACIM,EADJ,yBAUKA,EAAOJ,KACTK,QAAO,SAAAC,GAAG,MAAiB,YAAbA,EAAIC,QAClBC,KAAI,SAAAF,GAAG,sBACDA,OAbT,2CADe,uDAqBpBG,OAAM,SAAAC,GAEH,OADAC,QAAQb,MAAMY,GACP,CAAC,CACJE,GAAI,EACJL,KAAM,WACNM,KAAM,WACNC,OAAQ,cACRC,aAAc,EACdC,OAAQ,EACRC,SAAU,EACVC,QAAS,GACV,CACCN,GAAI,EACJL,KAAM,WACNM,KAAM,WACNC,OAAQ,iBACRC,aAAc,EACdC,OAAQ,EACRC,SAAU,EACVC,QAAS,O,4CAId,sBAAA5B,EAAA,+EACIE,GADJ,4C,kEAIA,WAA0Be,GAA1B,SAAAjB,EAAA,sEACGF,EAAY,CACd+B,KAAM,SACNZ,SAHD,4C,8CCnDMa,EAAmBC,IAAMC,cAAc,M,wBCI9CC,EAAYC,IAAOC,IAAV,mbAyBA,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,MAE/B,EAAgCC,qBAAWR,GAApCS,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,YAEXC,EAAaJ,EAAMpB,OAASsB,EAclC,OACI,eAACN,EAAD,CACIS,UAAWC,IAAW,2CAA4CF,GAAc,YAChFG,QAfY,WAIhBJ,EAAYH,EAAMpB,MFYnB,SAAP,kCEXQ4B,CAAWR,EAAMpB,MACZE,OAAM,SAAAC,GAEHC,QAAQb,MAAMY,OAKtB,UAGI,qBAAKsB,UAAU,sBAAf,SAAsCL,EAAMb,SAC5C,qBAAKkB,UAAU,8BAAf,SAA8CL,EAAMd,UCtDjD,SAASuB,EAAQC,GAE5B,IADA,IAAIC,EAAeD,EAAME,OACF,IAAjBD,GAAoB,CACtB,IAAME,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/CA,IAFsB,MAGsB,CAACD,EAAMG,GAAcH,EAAMC,IAAtED,EAAMC,GAHe,KAGAD,EAAMG,GAHN,KAK1B,OAAOH,ECCX,IAAMO,EAAiBC,YAAH,kEAMdC,EAAmBD,YAAH,mJAWhBE,EAAevB,IAAOwB,GAAV,wXAUDJ,EAGIE,GAKfG,EAAgBzB,IAAOC,IAAV,sEAMbyB,EAAsB1B,IAAOC,IAAV,2EAKV,SAAS0B,IACpB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOvB,EAAP,KAAiBC,EAAjB,KACA,EAAoCsB,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,YJXP,WAAP,gCIYQC,GACKlE,MAAK,SAAA6D,GAAS,OAAIC,EAAapB,EAAQ,YAAImB,QAC3C9C,OAAM,SAAAC,GAAG,OAAIC,QAAQb,MAAMY,QACjC,IAoDH,OACI,cAACU,EAAiByC,SAAlB,CAA2BC,MAAO,CAACjC,WAAUC,YApClC,SAAAD,GACXC,EAAYD,GACZ6B,EAAcjB,KAAKE,YAkCnB,SACI,sBAAKX,UAAU,oBAAf,UACI,cAACe,EAAD,CAEIf,UAAWC,IAAW,mBAAoBwB,GAAc,WAExDvB,QAAS,kBApCrBsB,EAAapB,EAAQmB,IACrBG,EAAcjB,KAAKE,eACnBW,EAAc,KA8BN,qBACSG,GAMT,eAACR,EAAD,WACI,qBAAKjB,UAAU,OAAf,SACI,uBACIb,KAAK,OACLa,UAAU,yCACV+B,YAAY,sBACZD,MAAOT,EACPW,QAAS,SAAAC,GAAC,OAAIA,EAAEC,OAAOC,UACvBC,SAAU,SAAAH,GAAC,OAAIX,EAAcW,EAAEC,OAAOJ,YAG9C,cAACZ,EAAD,CACImB,IAAK,SAAAA,GAAG,OAAgBA,GACxBrC,UAAU,OAFd,SAGKuB,EACIlD,QArEL,SAAAsB,GAChB,IAAI0B,EACA,OAAO,EAEX,IAAMiB,EAAOjB,EAAWkB,cAAcC,OAEtC,MADc,CAAC7C,EAAM8C,MAAO9C,EAAMb,OAAQa,EAAMd,MACnC6D,MAAK,SAAAC,GAAI,OAAIC,OAAM,OAACD,QAAD,IAACA,IAAQ,IAAIJ,cAAcM,SAASP,SAgE/C9D,KAAI,SAAAmB,GAAK,OACN,cAACD,EAAD,CAA4BC,MAAOA,GAAnBA,EAAMpB,mBC/ItD,IAYeuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtF,MAAK,YAAkD,IAA/CuF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACrC,EAAD,MAEJsC,SAASC,eAAe,SAG5BZ,M","file":"static/js/main.f2336d5a.chunk.js","sourcesContent":["import {io} from 'socket.io-client';\r\n\r\nconst urlParams = new URLSearchParams(window.location.search); // TODO: refactor\r\n\r\nexport const CONNECTION_HOST = `${urlParams.get('host') || 'localhost'}:${urlParams.get('port') || 5000}`;\r\n\r\nconst client = io(CONNECTION_HOST);\r\n\r\nexport async function sendMessage(msg) {\r\n    client.emit('msg', msg);\r\n}\r\n","import axios from 'axios';\r\nimport {CONNECTION_HOST, sendMessage} from './connectionService';\r\n// noinspection ES6CheckImport\r\nimport {parse} from 'papaparse';\r\n\r\nconst musicListPromise = axios.get(`//${CONNECTION_HOST}/static/features.csv`)\r\n    .then(async response => {\r\n        const result = await new Promise((complete, error) => {\r\n            parse(response.data, {\r\n                dynamicTyping: true,\r\n                skipEmptyLines: true,\r\n                header: true,\r\n                complete,\r\n                error,\r\n            });\r\n        });\r\n        return result.data\r\n            .filter(row => row.name !== 'default')\r\n            .map(row => ({\r\n                ...row,\r\n                // id: i,\r\n                // // name: headerCase(row.name || ''),\r\n                // start: new Date(row.start),\r\n                // end: new Date(row.end),\r\n            }));\r\n    })\r\n    .catch(err => {\r\n        console.error(err);\r\n        return [{\r\n            id: 0,\r\n            name: 'Test 123',\r\n            song: 'Test 123',\r\n            artist: 'Test Artist',\r\n            danceability: 0,\r\n            energy: 0,\r\n            liveness: 0,\r\n            valence: 0,\r\n        }, {\r\n            id: 0,\r\n            name: 'Test 456',\r\n            song: 'Test 456',\r\n            artist: 'Another Artist',\r\n            danceability: 0,\r\n            energy: 0,\r\n            liveness: 0,\r\n            valence: 0,\r\n        }];\r\n    });\r\n\r\nexport async function findMusicList() {\r\n    return musicListPromise;\r\n}\r\n\r\nexport async function selectSong(name) {\r\n    await sendMessage({\r\n        type: 'select',\r\n        name,\r\n    });\r\n}","import React from 'react';\r\n\r\nexport const SelectionContext = React.createContext(null);\r\n","import React, {useContext} from 'react';\r\nimport {selectSong} from '../services/musicService';\r\nimport styled from 'styled-components';\r\nimport {SelectionContext} from '../contexts/SelectionContext';\r\nimport classNames from 'classnames';\r\n\r\nconst Container = styled.div`\r\n    font-family: Lato, sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n    border-radius: 2px;\r\n    background: #FFF2;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    &:hover {\r\n        background: #FFF5;\r\n    }\r\n\r\n    &:active {\r\n        color: #555;\r\n        background: #FFF;\r\n    }\r\n\r\n    &.selected {\r\n        color: #000;\r\n        background: #EEE;\r\n        cursor: default;\r\n    }\r\n`;\r\n\r\nexport default function MusicItem({music}) {\r\n\r\n    const {selected, setSelected} = useContext(SelectionContext);\r\n\r\n    const isSelected = music.name === selected;\r\n\r\n    const handleClick = () => {\r\n        // if(isSelected) {\r\n        //     return;\r\n        // }\r\n        setSelected(music.name);\r\n        selectSong(music.name)\r\n            .catch(err => {\r\n                // TODO\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Container\r\n            className={classNames('d-flex px-3 py-2 my-2 align-items-center', isSelected && 'selected')}\r\n            onClick={handleClick}>\r\n            <div className=\"h4 mb-0 flex-grow-1\">{music.artist}</div>\r\n            <div className=\"h6 mb-0 text-end text-muted\">{music.song}</div>\r\n        </Container>\r\n    );\r\n}\r\n","export default function shuffle(array) {\r\n    let currentIndex = array.length;\r\n    while(currentIndex !== 0) {\r\n        const randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {findMusicList} from '../services/musicService';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport MusicItem from './MusicItem';\r\nimport {SelectionContext} from '../contexts/SelectionContext';\r\nimport shuffle from '../utils/shuffle';\r\nimport classNames from 'classnames';\r\n\r\nconst startAnimation = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n`;\r\n\r\nconst shuffleAnimation = keyframes`\r\n    0% {\r\n        color: #FFF;\r\n        transform: scale(1);\r\n    }\r\n    10% {\r\n        transform: scale(.99);\r\n    }\r\n`;\r\n\r\n// Main header\r\nconst StyledHeader = styled.h1`\r\n    font-family: Futura, Jost, sans-serif;\r\n    color: #AAA;\r\n    text-align: center;\r\n    font-size: 15rem;\r\n    font-weight: 100;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    animation: ${startAnimation} 1s forwards ease-out;\r\n\r\n    &.shuffle {\r\n        animation: ${shuffleAnimation} 1s forwards ease-out;\r\n    }\r\n`;\r\n\r\n// Everything below the header\r\nconst StyledContent = styled.div`\r\n    margin: auto;\r\n    max-width: 60rem;\r\n`;\r\n\r\n// Scroll area for song options\r\nconst StyledItemContainer = styled.div`\r\n    max-height: 30rem;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport default function App() {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [musicList, setMusicList] = useState([]);\r\n    const [selected, setSelected] = useState(null);\r\n    const [shuffleKey, setShuffleKey] = useState(0);\r\n\r\n    useEffect(() => {\r\n        findMusicList()\r\n            .then(musicList => setMusicList(shuffle([...musicList])))\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    // if(err) {\r\n    //     return (\r\n    //         <div className=\"h1 pt-5 mt-5 text-center\">Something unexpected happened!</div>\r\n    //     );\r\n    // }\r\n\r\n    const filterMusic = music => {\r\n        if(!searchText) {\r\n            return true;\r\n        }\r\n        const text = searchText.toLowerCase().trim();\r\n        const parts = [music.genre, music.artist, music.song];\r\n        return parts.some(part => String(part ?? '').toLowerCase().includes(text));\r\n    };\r\n\r\n    const select = selected => {\r\n        setSelected(selected);\r\n        setShuffleKey(Math.random());\r\n    };\r\n\r\n    const shuffleMusic = () => {\r\n        setMusicList(shuffle(musicList));\r\n        setShuffleKey(Math.random());\r\n        setSearchText('');\r\n    };\r\n\r\n    let scrollRef;\r\n    const sortMusic = () => {\r\n        const target = musicList.find(music => music.name === selected);\r\n        if(!target) {\r\n            return;\r\n        }\r\n        setShuffleKey(null);\r\n        setSearchText('');\r\n        setMusicList(musicList\r\n            .map(music => ({\r\n                ...music,\r\n                distance: /*Math.sqrt*/(\r\n                    (target.danceability - music.danceability) ** 2 +\r\n                    (target.energy - music.energy) ** 2 +\r\n                    (target.liveness - music.liveness) ** 2 +\r\n                    (target.valence - music.valence) ** 2\r\n                ),\r\n            }))\r\n            .sort((a, b) => a.distance - b.distance));\r\n        if(scrollRef) {\r\n            scrollRef.scrollTop = 0;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SelectionContext.Provider value={{selected, setSelected: select}}>\r\n            <div className=\"mx-2 mt-3 mt-md-4\">\r\n                <StyledHeader\r\n                    key={shuffleKey}\r\n                    className={classNames('mb-3 text-center', shuffleKey && 'shuffle')}\r\n                    // onClick={() => selected && shuffleKey ? sortMusic() : shuffleMusic()}>\r\n                    onClick={() => shuffleMusic()}>\r\n                    Callosum\r\n                </StyledHeader>\r\n                <StyledContent>\r\n                    <div className=\"py-2\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg rounded-0\"\r\n                            placeholder=\"search for music...\"\r\n                            value={searchText}\r\n                            onFocus={e => e.target.select()}\r\n                            onChange={e => setSearchText(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <StyledItemContainer\r\n                        ref={ref => scrollRef = ref}\r\n                        className=\"pe-2\">\r\n                        {musicList\r\n                            .filter(filterMusic)\r\n                            .map(music => (\r\n                                <MusicItem key={music.name} music={music}/>\r\n                            ))}\r\n                    </StyledItemContainer>\r\n                </StyledContent>\r\n            </div>\r\n        </SelectionContext.Provider>\r\n    );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}